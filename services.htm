    <div class="header">
        <div class="title">Manage <span data-bind="pageTitle"></span></div>
        <div class="bread">Ziti Network <span class="secondary">/</span> Manage <span data-bind="pageTitle"></span></div>
        <div class="line"></div>
        <div class="tabs">
            <div class="tab" data-go="/identities">Manage Identities</div>
            <div class="tab selected">Manage Services</div>
            <div class="tab" data-go="/gateways">Manage Routers</div>
        </div>
    </div>
    <div class="action icon-plus" data-action="add"></div>
    <div class="filters">
        <div class="clear"></div>
        <input id="SearchFilter" type="text" class="search" placeholder="Type to Filter" />
        <div class="counters"><span id="Start">-</span>-<span id="End">-</span> of <span id="Total">-</span></div>
        <div class="navigate prev icon-prev disabled"></div>
        <div class="navigate next icon-next disabled"></div>
    </div>
    <div class="area data">
        <div class="noitems"></div>
        <div class="table">
            <div class="head grid eight">
                <div class="col">
                    <div class="selector all"></div>
                </div>
                <div class="col sort asc" data-by="name">Name<div class="dragger"></div></div>
                <div class="col sort desktop" data-by="dns.hostname">Host<div class="dragger"></div></div>
                <div class="col sort desktop" data-by="dns.port">Port<div class="dragger"></div></div>
                <div class="col desktop">Router<div class="dragger"></div></div>
                <div class="col desktop">Endpoint<div class="dragger"></div></div>
                <div class="col sort" data-by="createdAt">Created</div>
                <div class="col"></div>
            </div>
            <div class="rows">
                <!-- This area will be replaced by data rows -->
            </div>
        </div>
    </div>
    <div class="nodata">No <span data-bind="pageTitle"></span> Defined, Click the plus to add A <span data-bind="singular"></span>.</div>

    <div id="RowTemplate" class="row grid eight template">
        <div class="col">
            <div class="selector" data-id="{{id}}"></div>
        </div>
        <div class="col" data-id="{{id}}"><strong>{{name}}</strong></div>
        <div class="col desktop" data-id="{{id}}">{{dns.hostname}}</div>
        <div class="col desktop" data-id="{{id}}">{{dns.port}}</div>
        <div class="col desktop" data-id="{{id}}">{{egressRouter}}</div>
        <div class="col desktop" data-id="{{id}}">{{endpointAddress}}</div>
        <div class="col" data-id="{{id}}">{{createdAt}}</div>
        <div class="col allowOver">
            <div class="dots" data-id="{{id}}">...
                <div class="gridMenu" data-id="{{id}}">
                    <div class="gridAction" data-id="{{id}}" data-action="edit">Edit</div>
                    <div class="gridAction" data-id="{{id}}" data-action="delete">Delete</div>
                </div>
            </div>
        </div>
    </div>

	<!-- Modification Modals -->
    <div id="AddModal" class="modal box full">
        <div class="sized">
            <div class="close icon-close"></div>
            <div class="title adding">Create <span data-bind="singular"></span></div>
            <div class="subtitle adding">Add a New <span data-bind="singular"></span> by completing the following form</div>
            <div class="title editing">Edit <span data-bind="singular"></span></div>
            <div class="subtitle editing">Change the <span data-bind="singular"></span> Details</div>
            <label for="Name">Name</label>
            <input id="Name" type="text" maxlength="500" placeholder="Enter a name" data-restrict="empty" />
            <label for="Roles">Roles</label>
            <input id="Roles" type="text" maxlength="500" placeholder="Enter a list of roles" />
            <div class="split">
                <div>
                    <label for="HostName">Host Name</label>
                    <input id="HostName" type="text" maxlength="500" placeholder="Host name" data-restrict="empty"  />
                </div>
                <div>
                    <label for="Port">Host Port</label>
                    <input id="Port" type="number" maxlength="500" placeholder="Enter a port" data-restrict="port" />
                </div>
            </div>
            <label for="Routers">Router</label>
            <select id="Routers"></select>
            <div class="darkened endpoint">Endpoint Service</div>
            <div id="RoutersArea" class="grid three endpoint">
                <div>
                    <label for="Protocol">Protocol</label>
                    <select id="Protocol" type="text">
                        <option value="tcp">tcp</option>
                        <option value="tls">tls</option>
                        <option value="udp">udp</option>
                        <option value="quic">quic</option>
                    </select>
                </div>
                <div>
                    <label for="EndPoint">Host</label>
                    <input id="EndPointHost" type="text" maxlength="500" placeholder="google.com" />
                </div>
                <div>
                    <label for="EndPoint">Port</label>
                    <input id="EndPointPort" type="number" max="65535" min="1" data-restrict="port" />
                </div>
            </div>
            <div>
            <div id="TagArea"></div>
            <div class="buttons">
                <div class="linkButton closer">Oops, No get me out of here</div>
                <div id="SaveButton" class="button">Save</div>
            </div>
        </div>
	</div>
    
    
    <script language="javascript" type="text/javascript">
        page = {
            binding: {
                pageTitle: "Services",
                singular: "Service"
            },
            editId: "",
            data: [],
            tagData: [],
            deleting: [],
            removal: {},
            searchId: null,
            isFirstLoaded: false,
            init: function() {
                this.events();
                this.isFirstLoaded = false;
                if (localStorage.getItem("hideTags")=="yes") $("#TagArea").addClass("hidden");
                context.addListener(tags.name, page.tagsLoaded);
                context.addListener(services.name, page.getLoaded);
                context.addListener(routers.name, page.routersLoaded);
                context.addListener(gateways.name, page.gatewaysLoaded);
                services.init();
                routers.init();
                gateways.all();
            }, 
            events: function() {
                $(".action").click(page.handleAction);
                $("#SaveButton").click(page.save);
                $("#SearchFilter").keyup(page.search);
                $("#IdentityFilter").keyup(page.filterIds);
                $("#Filter").keyup(page.filter);
		        $(".clear").click(page.clear);
            },
            clear: function() {
                $("#SearchFilter").val("");
                services.filter = "";
                services.get();
                $(".clear").removeClass("showing");
            },
            tagsLoaded: function() {
                var html = "";
                for (var i=0; i<tags.data.length; i++) {
                    if (tags.data[i].objects=="all"||tags.data[i].objects.indexOf('service')>=0) {
                        page.tagData[page.tagData.length] = tags.data[i];
                        html += tags.html(tags.data[i]);
                    }
                }
                $("#TagArea").html(html);
                tags.events();
            },
            clickEdit: function(e) {
                var id = $(e.currentTarget).data("id");
                if (id) page.edit(id);
            },
            getLoaded: function(e) {
                $(".selector.selected").removeClass("selected");
                app.setAction();
                page.data = services.data;
                $(".rows").html("");
                if (services.data.length>0) {
                    $("#Start").html(services.start());
                    $("#End").html(services.end());
                    $("#Total").html(services.total());
                    for (var i=0; i<services.data.length; i++) {
                        var element = $("#RowTemplate").clone();
                        var egress = "N/A";
                        if (services.data[i].egressRouter&&services.data[i].egressRouter!="unknown") egress = services.data[i].egressRouter;
                        var endpoint = "self";
                        if (services.data[i].endpointAddress) endpoint = services.data[i].endpointAddress;
                        element.removeClass("template");
                        element.attr("id","Row"+i);
                        element.html(element.html().split("{{id}}").join(services.data[i].id));
                        element.html(element.html().split("{{name}}").join(services.data[i].name));
                        element.html(element.html().split("{{dns.hostname}}").join(services.data[i].dns.hostname));
                        element.html(element.html().split("{{dns.port}}").join(services.data[i].dns.port));
                        element.html(element.html().split("{{egressRouter}}").join(egress));
                        element.html(element.html().split("{{endpointAddress}}").join(endpoint));
                        element.html(element.html().split("{{createdAt}}").join(moment(services.data[i].createdAt).fromNow()));
                        $(".rows").append(element);
                    }
                    page.pageLoaded();     
                    $(".data").show();
                    $(".nodata").hide();       
                } else {
                    $(".data").hide();
                    $(".nodata").show();
                }       
            },
            routersLoaded: function(e) {
                var select = document.getElementById("Routers");
                select.options = [];
                if (!page.isFirstLoaded) {
                    page.isFirstLoaded = true;
                    var option = document.createElement("option");
                    option.value = "";
                    option.text = "Hosted (No Router)";
                    select.add( option );
                }
                if (routers.data.length>0) {
                    for (var i=0; i<routers.data.length; i++) {
                        var option = document.createElement("option");
                        option.value = routers.data[i].id;
                        option.text = routers.data[i].id;
                        select.add( option );
                    }
                }
            },
            gatewaysLoaded: function(e) {
                var select = document.getElementById("Routers");
                select.options = [];
                if (!page.isFirstLoaded) {
                    page.isFirstLoaded = true;
                    var option = document.createElement("option");
                    option.value = "";
                    option.text = "Hosted (No Router)";
                    select.add( option );
                }
                if (gateways.data.length>0) {
                    for (var i=0; i<gateways.data.length; i++) {
                        var option = document.createElement("option");
                        option.value = gateways.data[i].id;
                        option.text = gateways.data[i].name;
                        select.add( option );
                    }
                }
            },
            toggleTag: function(e) {
                var tag = $(e.currentTarget);
                if (tag.hasClass("selected")) tag.removeClass("selected");
                else tag.addClass("selected");
            },
            pageLoaded: function() {
                $(".gridAction").click(page.gridAction);
                $(".navigate").off("click");
                $(".navigate").addClass("disabled");
                $(".clickEdit").click(page.clickEdit);
                if (!services.isFirst()) {
                    $(".navigate.prev").removeClass("disabled");
                    $(".navigate.prev").on("click", services.prev);
                }
                if (!services.isLast()) {
                    $(".navigate.next").removeClass("disabled");
                    $(".navigate.next").on("click", services.next);
                } 
                app.postLoad();
            },
            gridAction: function(e) {
                var action = $(e.currentTarget).data("action");
                var id = $(e.currentTarget).data("id");
                if (action=="delete") {
                    page.deleting = [];
                    page.deleting[page.deleting.length] = id;
                    modal.confirm("you want to delete this "+page.singular, page.confirmedDelete);
                } else if (action=="edit") {
                    page.edit(id);
                }
            },
            edit: function(id) {
                page.reset();
                var detail = services.details(id);
                tags.reset(page.tagData,detail);
                $(".adding").hide();
                $(".editing").show();

                $("#Name").val(detail.name);
                $("#HostName").val(detail.dns.hostname);
                $("#Port").val(detail.dns.port);
                $("#Roles").val(detail.roleAttributes);
                var router = "";
                if (detail.egressRouter&&detail.egressRouter!="unknown") router = detail.egressRouter;
                $("#Routers").val(router);
                var protocol = "tcp";
                var host = "";
                var port = "";
            
                if (detail.endpointAddress) {
                    var endpoint = detail.endpointAddress.split(':');
                    if (endpoint.length>0) protocol = endpoint[0];
                    if (endpoint.length>1) host = endpoint[1].split('//').join('');
                    if (endpoint.length>2) port = endpoint[2];
                    
                }
                $("#Protocol").val(protocol);
                $("#EndPointHost").val(host);
                $("#EndPointPort").val(port);
        
                page.editId = id;
                modal.show("AddModal");
            },
            save: function() {
                if (page.validate()) {
                    if (localStorage.getItem("filterAfterSave")=="on") {
                        $("#SearchFilter").val($("#Name").val());
                        services.filter = $("#SearchFilter").val();
                    }
                    var endpoint = '';
                    var roles = page.getRoles($("#Roles").val().trim().split(','));
                    
                    if ($("#Routers").val().trim().length!==0) endpoint = $("#Protocol").val()+":"+$("#EndPointHost").val()+":"+$("#EndPointPort").val();
                    services.save(
                        $("#Name").val(),
                        $("#HostName").val(),
                        $("#Port").val(),
                        $("#Routers").val(),
                        endpoint,
                        roles, 
                        tags.getValues(page.tagData),
                        page.editId, 
                        page.removal);
                } else growler.form();
            },
            getRoles: function(roles) {
                var values = [];
                for (var i=0; i<roles.length; i++) {
                    var item = roles[i].trim();
                    if (item.length>0) values[values.length] = item;
                }
                return values;
            },
            deleteMulti: function(e) {
                page.deleting = [];
                $(".selector.selected").each(function(index, e) {
                    page.deleting[page.deleting.length] = $(e).data("id");
                });
                if (page.deleting.length>0) {
                    modal.confirm("you want to delete these "+page.deleting.length+" "+((page.deleting.length>1)?page.binding.pageTitle:page.binding.singular), page.confirmedDelete);
                }
            },
            confirmedDelete: function() {
                services.delete(page.deleting);
                app.reset();
            },
            validate: function() {
                $(".errors").removeClass("errors");
                if ($("#Name").val().trim().length==0) $("#Name").addClass("errors");
                if ($("#HostName").val().trim().length==0) $("#HostName").addClass("errors");
                if ($("#Port").val().trim().length==0) $("#Port").addClass("errors");
                if ($("#Routers").val().trim().length!==0) {
                    if ($("#EndPointHost").val().trim().length==0) $("#EndPointHost").addClass("errors");
                    if ($("#EndPointPort").val().trim().length==0) $("#EndPointPort").addClass("errors");
                }
                return $(".errors").length==0;
            },
            reset: function() {
                tags.reset(page.tagData);
                page.editId = "";
                page.removal = {};
                $(".errors").removeClass("errors");
                $(".tag.selected").removeClass("selected");
                $("#Name").val("");
                $("#HostName").val("");
                $("#Port").val("");
                $("#Fabrics").val("");
                $("#Roles").val("");
                $("#Protocol").val("tcp");
                $("#EndPointHost").val("");
                $("#EndPointPort").val("");
            },
            handleAction: function(e) {
                page.reset();
                var action = $(e.currentTarget).data("action");
                if (action=="add") {
                    page.add();
                } else if (action=="remove") {
                    page.reset();
                    page.deleteMulti();
                }
            },
            add: function() {
                $(".adding").show();
                $(".editing").hide();
                modal.show("AddModal");
            }
        }
    </script>